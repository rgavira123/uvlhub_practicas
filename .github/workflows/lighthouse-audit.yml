name: Lighthouse Audit with Authentication

on:
  workflow_dispatch:
    inputs:
      config_file:
        description: 'Archivo JSON con las URLs y credenciales'
        required: true

  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  lighthouse:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: |
          npm install -g lighthouse puppeteer

      - name: Run Lighthouse Audit for Multiple URLs
        run: |
          node <<EOF
          const fs = require('fs');
          const lighthouse = require('lighthouse');
          const puppeteer = require('puppeteer');
          const { writeFileSync } = require('fs');

          // Cargar configuración
          const config = JSON.parse(fs.readFileSync('./.github/configs/lighthouse-config.json', 'utf-8'));

          (async () => {
            const browser = await puppeteer.launch({ headless: true });
            const page = await browser.newPage();

            // Login
            console.log('Iniciando sesión...');
            await page.goto(config.login.url);
            await page.type(config.login.usernameSelector, '${{ secrets.LOGIN_USERNAME }}');
            await page.type(config.login.passwordSelector, '${{ secrets.LOGIN_PASSWORD }}');
            await page.click(config.login.submitButtonSelector);
            await page.waitForNavigation();

            console.log('Login exitoso. Comenzando auditorías...');

            // Analizar cada URL
            for (const url of config.urls) {
              console.log(`Analizando: ${url}`);
              const report = await lighthouse(url, {
                port: (new URL(browser.wsEndpoint())).port,
                output: 'html',
                onlyCategories: ['accessibility']
              });

              const fileName = `lighthouse-report-${url.replace(/[^a-z0-9]/gi, '_')}.html`;
              writeFileSync(fileName, report.report);
              console.log(`Informe guardado: ${fileName}`);
            }

            await browser.close();
            console.log('Todas las auditorías completadas.');
          })().catch(err => {
            console.error(err);
            process.exit(1);
          });
          EOF